---
- include: setup.yml

- name: Configure elasticsearch.yml.
  template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: root
    group: elasticsearch
    mode: 0750
  notify: restart elasticsearch

- name: Create folder to copy cron job scripts.
  file:
    path: /home/{{ elasticsearch_user }}/es-maintenance
    state: directory
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_user }}"
    mode: 0770
  when: elasticsearch_purge_logstash_indexes or elasticsearch_close_logstash_indexes

- name: Copy purge script for cron.
  template:
    src: logstash-index-purge.rb.j2
    dest: /home/{{ elasticsearch_user }}/es-maintenance/logstash-index-purge.rb
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_user }}"
    mode: 0770
  when: elasticsearch_purge_logstash_indexes

- name: Create cron job to purge logstash indexes.
  cron:
    name: purge logstash indexes
    hour: "1"
    user: "{{ elasticsearch_user }}"
    job: "/bin/bash -l -c '/home/{{ elasticsearch_user }}/es-maintenance/logstash-index-purge.rb'"
    cron_file: escron
  when: elasticsearch_purge_logstash_indexes

- name: Copy close script for cron.
  template:
    src: logstash-index-close.rb.j2
    dest: /home/{{ elasticsearch_user }}/es-maintenance/logstash-index-close.rb
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_user }}"
    mode: 0770
  when: elasticsearch_close_logstash_indexes

- name: Create cron job to close older logstash indexes.
  cron:
    name: close logstash indexes
    hour: "1"
    user: "{{ elasticsearch_user }}"
    job: "/bin/bash -l -c '/home/{{ elasticsearch_user }}/es-maintenance/logstash-index-close.rb'"
    cron_file: escron
  when: elasticsearch_close_logstash_indexes

- name: Create custom storage directory.
  file:
    path: "{{ elasticsearch_custom_storage_path }}"
    state: directory
    owner: root
    group: elasticsearch
    mode: 0770
  when: elasticsearch_custom_storage_enabled
  notify: restart elasticsearch

- meta: flush_handlers

- name: Ensure Elasticsearch is started and enabled on boot.
  systemd:
    name: elasticsearch
    state: started
    enabled: "{{ elasticsearch_enabled_on_boot }}"
    daemon_reload: yes

- name: Make sure Elasticsearch is running before proceeding.
  wait_for:
    host: "{{ elasticsearch_network_host }}"
    port: "{{ elasticsearch_http_port }}"
    delay: 3
    timeout: 300
